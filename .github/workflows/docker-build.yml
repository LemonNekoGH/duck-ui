# docker-build.yml

name: Build and Push Docker Image

on:
  push:
    branches:
      - main
    # Add paths-ignore to avoid unnecessary builds
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'docs/**'

jobs:
  trigger_build:  # **NO DEPENDENCIES** - Just a starting point
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'docker-false') }}

    steps:
      - name: Sleep briefly (or perform a simple check)
        run: sleep 5  # Wait a few seconds (can adjust as needed)
        # You can also put a more sophisticated check here, like waiting
        # for a file to be present, etc.  The key is that it *runs*.

  build_and_push: # DEPENDS on trigger_build AND create_release
    runs-on: ubuntu-latest
    needs: [trigger_build, create_release] # Depends on BOTH
    if: ${{ needs.trigger_build.result == 'success' && !contains(github.event.head_commit.message, 'docker-false') }} # Use result context
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        # Only login when we're going to push (not on PR)
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}  # More reliable than a secret
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ needs.create_release.outputs.new_tag }},enable=${{ github.ref == 'refs/heads/main' }}
            type=sha,format=long
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max